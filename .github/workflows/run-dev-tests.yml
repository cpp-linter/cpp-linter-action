name: "Check python code"

on:
  push:
    paths:
      - "**.py"
      - pyproject.toml
      - pre-commit-config.yaml
      - ".github/workflows/run-dev-tests.yml"
  pull_request:
    types: opened
    paths:
      - "**.py"
      - "**requirements*.txt"
      - pyproject.toml
      - pre-commit-config.yaml
      - ".github/workflows/run-dev-tests.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Build wheel
        run: python3 -m pip wheel --no-deps -w dist .
      - name: Upload wheel as artifact
        uses: actions/upload-artifact@v3
        with:
          name: cpp-linter-action_wheel
          path: ${{ github.workspace }}/dist/*.whl

  test:
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        py: ['3.7', '3.8', '3.9', '3.10']
        os: ['windows-latest', ubuntu-latest]
        version: ['13', '12', '11', '10', '9', '8', '7']
        include:
          - tools_dir: 'N/A'
          - os: 'windows-latest'
            version: '10'
            tools_dir: temp
          - os: 'windows-latest'
            version: '10'
            tools_dir: temp
          - os: 'windows-latest'
            version: '11'
            tools_dir: temp
          - os: 'windows-latest'
            version: '12'
            tools_dir: temp
          - os: 'ubuntu-latest'
            version: '13'
            tools_dir: temp
          # - version: '14'
          #   tools_dir: temp
          - version: '7'
            tools_dir: temp
          - version: '8'
            tools_dir: temp
          - version: '9'
            tools_dir: temp

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}

      - name: download wheel artifact
        uses: actions/download-artifact@v3
        with:
          name: cpp-linter-action_wheel
          path: dist

      - name: Install workflow deps
        # using a wildcard as filename on Windows requires a bash shell
        shell: bash
        run: python3 -m pip install pytest coverage[toml] dist/*.whl

      - name: Install clang-tools
        if: matrix.tools_dir == 'temp'
        run: |
          python -m pip install clang-tools
          clang-tools --install ${{ matrix.version }}  --directory ${{ runner.temp }}/clang-tools

      - name: Collect Coverage (native clang install)
        if: matrix.tools_dir == 'N/A'
        env:
          CLANG_VERSION: ${{ matrix.version }}
        run: coverage run -m pytest

      - name: Collect Coverage (non-native clang install)
        if: matrix.tools_dir == 'temp'
        env:
          CLANG_VERSION: ${{ runner.temp }}/clang-tools
        run: coverage run -m pytest

      - run: coverage report && coverage xml

      - uses: codecov/codecov-action@v3
        if: matrix.os == 'ubuntu-latest' && matrix.version == '12' && matrix.py == '3.10'
        with:
          files: ./coverage.xml
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
